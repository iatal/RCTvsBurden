setwd("Desktop/Programs GBD/RCTvsBurden/Interactive_figure/")

library(shiny)
library(gdata)
library(ggplot2)
library(grid)
library(gridExtra)

DT <- read.table("./data/data.txt")

input <- list(tabs="diseases",region="World",metr_burden="DALY",metr_res="RCTs",Nb_dis=10,
all_nhi = "All regions",disease="All diseases",metr_burden2="DALY",metr_res2="RCTs",
region1="High-income countries",region2="World",metr_burden_comp="DALY",metr_res_comp="RCTs",Nb_dis_comp=10,
hgp_reg = TRUE,
all_nhi_comp = "All regions",
disease1 = "Neoplasms", disease2 = "HIV", metr_burden_comp_dis = "DALY", metr_res_comp_dis = "RCTs")

DT$regs_lab <- reorder(DT$regs_lab,new.order=c("World",
                                               "High-income countries",
                                               "Non-high-income countries",
                                               "Eastern Europe and Central Asia",
                                               "Latin America and Caribbean",
                                               "North Africa and Middle East",
                                               "South Asia",
                                               "Southeast Asia, East Asia and Oceania",
                                               "Sub-Saharian Africa"))
                       
dinit_reg <- DT[DT$Disease!="All",-c(grep("glob",names(DT)),grep("NHI",names(DT)))]
dinit_dis <- droplevels(DT[DT$Region!="All" & DT$Region!="Non-HI",-grep("loc",names(DT))])
levels(dinit_dis$regs_lab) <- c("High-income",
                                "Eastern Europe\nCentral Asia",
                                "Latin America",
                                "North Africa\nMiddle East",
                                "South Asia",
                                "Southeast Asia\nOceania",
                                "Sub-Saharian\nAfrica")

#For numbers in tooltip
form_ratio <- function(x,pourc=TRUE){
    if(is.na(x[1])) return(NA)
        else {
        paste(format(round(x[2]),nsmall = 0,big.mark=","),
               ifelse(pourc==TRUE,"% ["," ["),format(round(x[1]),nsmall = 0,big.mark=","),
               " - ",format(round(x[3]),nsmall = 0,big.mark=","),"]",sep="")
            }
    }

    ddis_comp_reg <- 
        if(input$all_nhi_comp=="All regions") dinit_dis[,-grep("NHI",names(dinit_dis))]        
            else dinit_dis[dinit_dis$Region!="High-income",-grep("glob",names(dinit_dis))]
    
        
    #subset according to disease
    ddis_comp <- 
        ddis_comp_reg[ddis_comp_reg$Dis_tooltip%in%c(input$disease1,input$disease1),]
    

    #subset according to burden metric
        dfb <- ddis_comp[,c(which(names(ddis_comp)%in%c("Disease","Dis_lab","Dis_tooltip","Region","regs_lab")),
                                   grep(tolower(input$metr_burden_comp),names(ddis_comp)))]
        names(dfb) <- c("Region","Disease","Dis_lab","Dis_tooltip","regs_lab","Nb","prop")
        dfb$metr <- "burden"
    ddis_comp_burden <- 
        dfb

    #Order of regions: depending on burden of the disease: increasing burden. if High-income: we put it first
    
            r <- as.character(ddis_comp_burden$Region[ddis_comp_burden$Dis_tooltip==input$disease1][order(ddis_comp_burden$Nb[ddis_comp_burden$Dis_tooltip==input$disease1])])
        if("High-income"%in%r) r <- c("High-income",r[r!="High-income"])
    regs_ord_comp <-    r



        dfr <- ddis_comp[,c(which(names(ddis_comp)%in%c("Disease","Dis_lab","Dis_tooltip","Region","regs_lab")),
                         grep(input$metr_res2,names(ddis_comp)))]
        names(dfr) <- c("Region","Disease","Dis_lab","Dis_tooltip",
                        "regs_lab","Nb_low","Nb_med","Nb_up","prop_low","prop_med","prop_up")
ddis_comp_res <-
        dfr

    
        dfr_med <- ddis_comp_res[,c("Region","regs_lab","Disease","Dis_lab","Dis_tooltip","Nb_med","prop_med")]
        names(dfr_med) <- c("Region","regs_lab","Disease","Dis_lab","Dis_tooltip","Nb","prop")
        dfr_med$metr <- "research"        
        dt <- rbind(ddis_comp_burden[,c("Region","regs_lab","Disease","Dis_lab","Dis_tooltip","Nb","prop","metr")],dfr_med)
        dt$Region <- reorder(dt$Region,new.order=regs_ord_comp)
    ddis_comp_plot <-
        dt

        d_err <- ddis_comp_res[,c("Region","regs_lab","prop_low","prop_up")]
        d_err$metr <- "research"        
        d_err$Region <- reorder(d_err$Region,new.order=regs_ord_comp)
ddisfr_comp_err <-        d_err
    


